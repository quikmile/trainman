# -*- coding: utf-8 -*-
# Generated by Django 1.11a1 on 2017-02-17 11:28
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('servers', '0003_auto_20170217_1128'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.IntegerField(blank=True, default=1487330932, null=True)),
                ('updated_on', models.IntegerField(blank=True, default=1487330932, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('service_name', models.CharField(max_length=100, unique=True)),
                ('repo_url', models.URLField(unique=True)),
                ('contributors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=300), blank=True, null=True, size=None)),
                ('database_id', models.PositiveIntegerField(blank=True, null=True)),
                ('http_server', models.CharField(choices=[('NGINX', 'NGINX')], default='NGINX', max_length=20)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Database Type')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.IntegerField(blank=True, default=1487330932, null=True)),
                ('updated_on', models.IntegerField(blank=True, default=1487330932, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('instance', models.IntegerField(default=1)),
                ('service_version', models.IntegerField(default=1)),
                ('registry_host', models.CharField(max_length=100)),
                ('registry_port', models.IntegerField(default=4500)),
                ('redis_host', models.CharField(max_length=100)),
                ('redis_port', models.IntegerField(default=6379)),
                ('http_host', models.CharField(max_length=100)),
                ('http_port', models.IntegerField(default=8000)),
                ('tcp_host', models.CharField(max_length=100)),
                ('tcp_port', models.IntegerField(default=8001)),
                ('signals', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('optional_settings', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('database_node_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Database Node')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servers.Server')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.Service')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceNodeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.IntegerField(blank=True, default=1487330932, null=True)),
                ('updated_on', models.IntegerField(blank=True, default=1487330932, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('server_type', models.CharField(choices=[('STAG', 'Staging'), ('PROD', 'Production')], default='STAG', max_length=4)),
                ('instances', models.IntegerField(default=1)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.Service')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='servicenodetype',
            unique_together=set([('service', 'server_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='servicenode',
            unique_together=set([('server', 'service', 'instance', 'service_version', 'is_active')]),
        ),
    ]
