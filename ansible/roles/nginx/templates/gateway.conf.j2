{% for service in services %}
upstream {{ service.service_uri }} {
    server {{ service.ip_address }}:{{ service.http_port }} max_fails=5 fail_timeout=10s;
}
{% endfor %}


server {
    listen      80;
    charset     utf-8;

    client_max_body_size 75M;

    proxy_set_header HOST $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    location = /auth {
            internal;
            proxy_pass              http://rbac/auth/;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        X-Original-URI $request_uri;
    }

    {% for service in services %}
location /v{{ service.service_version }}/{{ service.service_uri }}/ {

        {% if service.service_uri != 'rbac' %}
auth_request     /auth;
        auth_request_set $auth_status $upstream_status;
        {% endif %}

        proxy_pass http://{{ service.service_uri }}/;

        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        # required to be able to read Authorization header in frontend
        #add_header 'Access-Control-Expose-Headers' 'Authorization' always;

        if ($request_method = 'OPTIONS') {
            # Tell client that this pre-flight info is valid for 20 days
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    {% endfor %}

}

