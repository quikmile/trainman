---

- name: Install postgres
  include: roles/postgres/tasks/main.yml
  tags:
    - setup
    - postgres

- name: setup xauth and createsuperuser
  shell: |
    cd {{ project_root }}/{{ project_name }}
    /home/{{ ansible_user }}/venv/bin/python manage.py makemigrations xauth
    /home/{{ ansible_user }}/venv/bin/python manage.py migrate
  notify:
    - restart uwsgi
  tags:
    - setup
    - trellioadmin

- name: trellioadmin copy settings.py
  template: src=settings.py.j2 dest={{ project_root }}/{{ project_name }}/{{ project_name }}/settings.py
  sudo: yes
  notify:
    - restart uwsgi
  tags:
    - trellioadmin

- name: create app directories
  file: path={{ project_root }}/{{ project_name }}/apps/{{ item.service }} owner={{ ansible_ssh_user }} group={{ ansible_ssh_user }} mode=0777 state=directory
  sudo: yes
  with_items:
    - "{{ services }}"
  tags:
    - trellioadmin

- name: create apps
  shell: |
    cd {{ project_root }}/{{ project_name }}
    /home/{{ ansible_user }}/venv/bin/python manage.py startapp apps/{{ item.service }}
    /home/{{ ansible_user }}/venv/bin/python manage.py inspectdb --database={{ item.service }} > apps/{{ item.service }}/models.py
    /home/{{ ansible_user }}/venv/bin/python manage.py makemigrations
    /home/{{ ansible_user }}/venv/bin/python manage.py migrate
  with_items:
    - "{{ services }}"
  notify:
    - restart uwsgi
  tags:
    - trellioadmin

- name: commit code
  command: "{{ item }}"
  with_items:
    - cd {{ project_root }}/{{ project_name }}
    - git add .
    - git commit -m "updated models by inspect db command by trainman"
    - git push
  tags:
    - trellioadmin